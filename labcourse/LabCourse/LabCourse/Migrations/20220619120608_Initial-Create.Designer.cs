// <auto-generated />
using System;
using LabCourse.models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LabCourse.Migrations
{
    [DbContext(typeof(ProfesoriDB))]
    [Migration("20220619120608_Initial-Create")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LabCourse.models.Departamenti", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmriDepartamenti")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Departamenti");
                });

            modelBuilder.Entity("LabCourse.models.Lenda", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ECTS")
                        .HasColumnType("int");

                    b.Property<string>("EmriLendes")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProfaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ProfaId");

                    b.ToTable("Lenda");
                });

            modelBuilder.Entity("LabCourse.models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("LabCourse.models.PiketProvimit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Lendaid")
                        .HasColumnType("int");

                    b.Property<int>("Piket")
                        .HasColumnType("int");

                    b.Property<int>("Studentiid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Lendaid");

                    b.ToTable("PiketProvimit");
                });

            modelBuilder.Entity("LabCourse.models.Profa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmriMbiemri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profa");
                });

            modelBuilder.Entity("LabCourse.models.Profesori", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Departamentiid")
                        .HasColumnType("int");

                    b.Property<string>("EmriMbiemri")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Lendaid")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("Departamentiid");

                    b.HasIndex("Lendaid");

                    b.ToTable("Profesoret");
                });

            modelBuilder.Entity("LabCourse.models.Provimet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataProvimit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kategoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KohaProvimit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lenda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profesori")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Provimet");
                });

            modelBuilder.Entity("LabCourse.models.Register", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Register");
                });

            modelBuilder.Entity("LabCourse.models.Lenda", b =>
                {
                    b.HasOne("LabCourse.models.Profa", null)
                        .WithMany("Lendas")
                        .HasForeignKey("ProfaId");
                });

            modelBuilder.Entity("LabCourse.models.PiketProvimit", b =>
                {
                    b.HasOne("LabCourse.models.Lenda", "Lenda")
                        .WithMany()
                        .HasForeignKey("Lendaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lenda");
                });

            modelBuilder.Entity("LabCourse.models.Profesori", b =>
                {
                    b.HasOne("LabCourse.models.Departamenti", "Departamenti")
                        .WithMany()
                        .HasForeignKey("Departamentiid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabCourse.models.Lenda", "Lenda")
                        .WithMany()
                        .HasForeignKey("Lendaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamenti");

                    b.Navigation("Lenda");
                });

            modelBuilder.Entity("LabCourse.models.Profa", b =>
                {
                    b.Navigation("Lendas");
                });
#pragma warning restore 612, 618
        }
    }
}
